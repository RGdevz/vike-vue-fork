{"version":3,"file":"useConfig-client.js","sources":["../../../src/hooks/useConfig/useConfig-client.ts"],"sourcesContent":["export { useConfig }\n\nimport type { PageContext } from 'vike/types'\nimport type { PageContextInternal } from '../../types/PageContext.js'\nimport type { ConfigFromHook } from '../../types/Config.js'\nimport { usePageContext } from '../usePageContext.js'\nimport { getPageContext } from 'vike/getPageContext'\nimport { applyHeadSettings } from '../../integration/applyHeadSettings.js'\nimport { watchEffect } from 'vue'\n\nfunction useConfig(): (config: ConfigFromHook) => void {\n  // Vike hook\n  let pageContext = getPageContext() as PageContext & PageContextInternal\n  if (pageContext) return (config: ConfigFromHook) => setPageContextConfigFromHook(config, pageContext)\n\n  // Component\n  pageContext = usePageContext()\n  return (config: ConfigFromHook) => {\n    watchEffect(() => {\n      if (!pageContext._headAlreadySetWrapper!.val) {\n        setPageContextConfigFromHook(config, pageContext)\n      } else {\n        applyHead(config)\n      }\n    })\n  }\n}\n\nfunction setPageContextConfigFromHook(config: ConfigFromHook, pageContext: PageContextInternal) {\n  pageContext._configFromHook ??= {}\n  Object.assign(pageContext._configFromHook, config)\n}\n\nfunction applyHead(config: ConfigFromHook) {\n  const { title, lang } = config\n  applyHeadSettings(title, lang)\n}\n"],"names":[],"mappings":";;;;AAUA,SAAS,YAA8C;AAErD,MAAI,cAAc,eAAe;AACjC,MAAI,YAAoB,QAAA,CAAC,WAA2B,6BAA6B,QAAQ,WAAW;AAGpG,gBAAc,eAAe;AAC7B,SAAO,CAAC,WAA2B;AACjC,gBAAY,MAAM;AACZ,UAAA,CAAC,YAAY,uBAAwB,KAAK;AAC5C,qCAA6B,QAAQ,WAAW;AAAA,MAAA,OAC3C;AACL,kBAAU,MAAM;AAAA,MAAA;AAAA,IAClB,CACD;AAAA,EACH;AACF;AAEA,SAAS,6BAA6B,QAAwB,aAAkC;AAC9F,cAAY,oBAAZ,YAAY,kBAAoB,CAAC;AAC1B,SAAA,OAAO,YAAY,iBAAiB,MAAM;AACnD;AAEA,SAAS,UAAU,QAAwB;AACnC,QAAA,EAAE,OAAO,KAAA,IAAS;AACxB,oBAAkB,OAAO,IAAI;AAC/B;"}