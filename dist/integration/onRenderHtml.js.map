{"version":3,"file":"onRenderHtml.js","sources":["../../src/utils/assert.ts","../../src/utils/getTagAttributesString.ts","../../src/integration/onRenderHtml.ts"],"sourcesContent":["export function assert(condition: unknown): asserts condition {\n  if (condition) return\n  throw new Error('You stumbled upon a vike-vue bug, reach out on GitHub.')\n}\n","export { getTagAttributesString }\nexport type { TagAttributes }\n\ntype TagAttributes = Record<string, string | number | boolean | undefined | null>\n\nfunction getTagAttributesString(tagAttributes: TagAttributes): string {\n  const tagAttributesString = Object.entries(tagAttributes)\n    .filter(([_key, value]) => value !== false && value !== null && value !== undefined)\n    .map(([key, value]) => `${ensureIsValidAttributeName(key)}=${JSON.stringify(String(value))}`)\n    .join(' ')\n  if (tagAttributesString.length === 0) return ''\n  return ` ${tagAttributesString}`\n}\n\nfunction ensureIsValidAttributeName(str: string): string {\n  if (/^[a-z][a-z0-9\\-]*$/i.test(str) && !str.endsWith('-')) return str\n  throw new Error(`Invalid HTML tag attribute name ${JSON.stringify(str)}`)\n}\n","// https://vike.dev/onRenderHtml\nexport { onRenderHtml }\n\nimport { dangerouslySkipEscape, escapeInject } from 'vike/server'\nimport type { OnRenderHtmlAsync, PageContextServer } from 'vike/types'\nimport { App } from 'vue'\nimport { type SSRContext, renderToNodeStream, renderToString, renderToWebStream } from 'vue/server-renderer'\nimport { callCumulativeHooks } from '../utils/callCumulativeHooks.js'\nimport { assert } from '../utils/assert.js'\nimport { createVueApp } from './createVueApp.js'\nimport { getHeadSetting } from './getHeadSetting.js'\nimport { getTagAttributesString, type TagAttributes } from '../utils/getTagAttributesString.js'\nimport type { PageContextInternal } from '../types/PageContext.js'\n\nconst onRenderHtml: OnRenderHtmlAsync = async (\n  pageContext: PageContextServer & PageContextInternal,\n): ReturnType<OnRenderHtmlAsync> => {\n  const { pageHtml, fromHtmlRenderer } = await getPageHtml(pageContext)\n\n  pageContext.isRenderingHead = true\n  const headHtml = await getHeadHtml(pageContext)\n  pageContext.isRenderingHead = false\n\n  const { bodyHtmlBegin, bodyHtmlEnd } = await getBodyHtmlBoundary(pageContext)\n\n  const { htmlAttributesString, bodyAttributesString } = getTagAttributes(pageContext)\n\n  // Not needed on the client-side, thus we remove it to save KBs sent to the client\n  delete pageContext._configFromHook\n\n  const documentHtml = escapeInject`<!DOCTYPE html>\n    <html${dangerouslySkipEscape(htmlAttributesString)}>\n      <head>\n        <meta charset=\"UTF-8\" />\n        ${headHtml}\n      </head>\n      <body${dangerouslySkipEscape(bodyAttributesString)}>\n        ${bodyHtmlBegin}\n        <div id=\"app\">${pageHtml}</div>\n        ${bodyHtmlEnd}\n      </body>\n    </html>`\n\n  return {\n    documentHtml,\n    pageContext: {\n      enableEagerStreaming: true,\n      fromHtmlRenderer,\n    },\n  }\n}\n\nexport type PageHtmlStream = ReturnType<typeof renderToNodeStream> | ReturnType<typeof renderToWebStream>\nasync function getPageHtml(pageContext: PageContextServer) {\n  let pageHtml: ReturnType<typeof dangerouslySkipEscape> | PageHtmlStream | string = ''\n  pageContext.ssrContext = {}\n  const fromHtmlRenderer: PageContextServer['fromHtmlRenderer'] = {}\n\n  let app: App | undefined\n  if (\n    // Whether SSR is enabled\n    !!pageContext.Page\n  ) {\n    const { app: app_ } = await createVueApp(pageContext, true, 'Page')\n    app = app_\n    pageContext.app = app\n  }\n\n  // - We call onBeforeRenderHtml() right before rendering, so that pageContext.app is available to onBeforeRenderHtml()\n  //   - https://github.com/vikejs/vike-vue/issues/141\n  await callCumulativeHooks(pageContext.config.onBeforeRenderHtml, pageContext)\n\n  if (pageContext.Page) {\n    assert(app)\n\n    if (!pageContext.config.stream) {\n      const pageHtmlString = await renderToStringWithErrorHandling(app, pageContext.ssrContext)\n      pageContext.pageHtmlString = pageHtmlString\n      pageHtml = dangerouslySkipEscape(pageHtmlString)\n    } else {\n      const pageHtmlStream =\n        pageContext.config.stream === 'web'\n          ? renderToWebStreamWithErrorHandling(app, pageContext.ssrContext)\n          : renderToNodeStreamWithErrorHandling(app, pageContext.ssrContext)\n      pageContext.pageHtmlStream = pageHtmlStream\n      pageHtml = pageHtmlStream\n    }\n\n    // TODO/breaking-change: always call onAfterRenderHtml()\n    //  - I.e. don't call it inside this `if (!!pageContext.Page)` block.\n    //  - Tell users to use `!!pageContext.Page` if they want to apply the hook only for SSR.\n    //    - Already done: https://vike.dev/onAfterRenderHtml\n    const afterRenderResults = await callCumulativeHooks(pageContext.config.onAfterRenderHtml, pageContext)\n    Object.assign(fromHtmlRenderer, ...afterRenderResults)\n  }\n  return { pageHtml, fromHtmlRenderer }\n}\n\nasync function getHeadHtml(pageContext: PageContextServer & PageContextInternal) {\n  pageContext._headAlreadySetWrapper = { val: true }\n\n  const title = getHeadSetting<string | null>('title', pageContext)\n  const favicon = getHeadSetting<string | null>('favicon', pageContext)\n  const description = getHeadSetting<string | null>('description', pageContext)\n  const image = getHeadSetting<string | null>('image', pageContext)\n\n  const titleTags = !title ? '' : escapeInject`<title>${title}</title><meta property=\"og:title\" content=\"${title}\">`\n  const faviconTag = !favicon ? '' : escapeInject`<link rel=\"icon\" href=\"${favicon}\" />`\n  const descriptionTags = !description\n    ? ''\n    : escapeInject`<meta name=\"description\" content=\"${description}\"><meta property=\"og:description\" content=\"${description}\">`\n  const imageTags = !image\n    ? ''\n    : escapeInject`<meta property=\"og:image\" content=\"${image}\"><meta name=\"twitter:card\" content=\"summary_large_image\">`\n  const viewportTag = dangerouslySkipEscape(getViewportTag(getHeadSetting<Viewport>('viewport', pageContext)))\n\n  let headElementHtml: ReturnType<typeof dangerouslySkipEscape> | string = ''\n  const { app } = await createVueApp(pageContext, true, 'Head')\n  headElementHtml = dangerouslySkipEscape(await renderToStringWithErrorHandling(app))\n\n  const headHtml = escapeInject`\n    ${titleTags}\n    ${viewportTag}\n    ${headElementHtml}\n    ${faviconTag}\n    ${descriptionTags}\n    ${imageTags}\n  `\n  return headHtml\n}\n\nasync function getBodyHtmlBoundary(pageContext: PageContextServer) {\n  const bodyHtmlBegin = dangerouslySkipEscape(\n    (await callCumulativeHooks(pageContext.config.bodyHtmlBegin, pageContext)).join(''),\n  )\n\n  // we define this hook here so that it doesn't need to be exported by vike-vue\n  const defaultTeleport = `<div id=\"teleported\">${pageContext.ssrContext!.teleports?.['#teleported'] ?? ''}</div>`\n  const bodyHtmlEndHooks = [defaultTeleport, ...(pageContext.config.bodyHtmlEnd ?? [])]\n  const bodyHtmlEnd = dangerouslySkipEscape((await callCumulativeHooks(bodyHtmlEndHooks, pageContext)).join(''))\n\n  return { bodyHtmlBegin, bodyHtmlEnd }\n}\n\nfunction getTagAttributes(pageContext: PageContextServer) {\n  let lang = getHeadSetting<string | null>('lang', pageContext)\n  // Don't set `lang` to its default value if it's `null` (so that users can set it to `null` in order to remove the default value)\n  if (lang === undefined) lang = 'en'\n\n  const bodyAttributes = mergeTagAttributesList(getHeadSetting<TagAttributes[]>('bodyAttributes', pageContext))\n  const htmlAttributes = mergeTagAttributesList(getHeadSetting<TagAttributes[]>('htmlAttributes', pageContext))\n\n  const bodyAttributesString = getTagAttributesString(bodyAttributes)\n  const htmlAttributesString = getTagAttributesString({ ...htmlAttributes, lang: lang ?? htmlAttributes.lang })\n\n  return { htmlAttributesString, bodyAttributesString }\n}\nfunction mergeTagAttributesList(tagAttributesList: TagAttributes[] = []) {\n  const tagAttributes: TagAttributes = {}\n  tagAttributesList.forEach((tagAttrs) => Object.assign(tagAttributes, tagAttrs))\n  return tagAttributes\n}\n\nasync function renderToStringWithErrorHandling(app: App, ctx?: SSRContext) {\n  let returned = false\n  let err: unknown\n  // Workaround: Vue's renderToString() swallows errors in production https://github.com/vuejs/core/issues/7876\n  // Let's eventually use app.config.throwUnhandledErrorInProduction instead (recently released in vue@3.5).\n  app.config.errorHandler = (err_) => {\n    if (returned) {\n      console.error(err_)\n    } else {\n      err = err_\n    }\n  }\n  const appHtml = await renderToString(app, ctx)\n  returned = true\n  if (err) throw err\n  return appHtml\n}\n\nfunction renderToNodeStreamWithErrorHandling(app: App, ctx?: SSRContext) {\n  let returned = false\n  let err: unknown\n  app.config.errorHandler = (err_) => {\n    if (returned) {\n      console.error(err_)\n    } else {\n      err = err_\n    }\n  }\n  const appHtml = renderToNodeStream(app, ctx)\n  returned = true\n  if (err) throw err\n  return appHtml\n}\n\nfunction renderToWebStreamWithErrorHandling(app: App, ctx?: SSRContext) {\n  let returned = false\n  let err: unknown\n  app.config.errorHandler = (err_) => {\n    if (returned) {\n      console.error(err_)\n    } else {\n      err = err_\n    }\n  }\n  const appHtml = renderToWebStream(app, ctx)\n  returned = true\n  if (err) throw err\n  return appHtml\n}\n\nexport type Viewport = 'responsive' | number | null\nfunction getViewportTag(viewport: Viewport | undefined): string {\n  if (viewport === 'responsive' || viewport === undefined) {\n    // `user-scalable=no` isn't recommended anymore:\n    //   - https://stackoverflow.com/questions/22354435/to-user-scalable-no-or-not-to-user-scalable-no/22544312#comment120949420_22544312\n    return '<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">'\n  }\n  if (typeof viewport === 'number') {\n    return `<meta name=\"viewport\" content=\"width=${viewport}\">`\n  }\n  return ''\n}\n"],"names":[],"mappings":"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"}